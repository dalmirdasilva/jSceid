<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE hibernate-mapping PUBLIC 
 "-//Hibernate/Hibernate Mapping DTD//EN"
 "http://localhost/hibernate-mapping-3.0.dtd"> 

<hibernate-mapping>
    <class name="entity.Patient" table="patient">
        <meta attribute="class-description">
            This class contains the patient details. 
        </meta>
        <id name="id" type="long">
            <generator class="native"/>
        </id>
        <set name="clinicalExams" table="clinical_exam" inverse="true" lazy="true" fetch="select" cascade="all,delete-orphan">
            <key>
                <column name="patient_id" not-null="true" />
            </key>
            <one-to-many class="entity.ClinicalExam" />
        </set>
        <set name="diagnosticExams" table="diagnostic_exam" inverse="true" lazy="true" fetch="select" cascade="all,delete-orphan">
            <key>
                <column name="patient_id" not-null="true" />
            </key>
            <one-to-many class="entity.DiagnosticExam" />
        </set>
        <set name="postOperatoryEndoscopies" table="post_operatory_endoscopy" inverse="true" lazy="true" fetch="select" cascade="all,delete-orphan">
            <key>
                <column name="patient_id" not-null="true" />
            </key>
            <one-to-many class="entity.PostOperatoryEndoscopy" />
        </set>
        <many-to-one name="address" class="entity.Address" unique="true" column="address_id" lazy="false" cascade="all"/>
        <many-to-one name="medic" class="entity.Medic" column="medic_id" lazy="false" cascade="all"/>
        <many-to-one name="avatar" class="entity.Avatar" column="avatar_id" lazy="false" cascade="all"/>
        <property name="name" type="string"/>  
        <property name="same" type="int"/>  
        <property name="age" type="int"/>  
        <property name="gender" not-null="true">
            <type name="org.hibernate.type.EnumType">
                <param name="enumClass">entity.nonpersistable.Gender</param>
            </type> 
        </property>
        <property name="color" type="string"/>  
        <property name="profession" type="string"/>  
        <property name="bornCity" column="born_city" type="string"/>  
        <property name="phone" type="string"/>
        <property name="createdAt" column="created_at" type="date"/>
        <property name="updatedAt" column="updated_at" type="date"/>
        <property name="active" type="boolean"/>
    </class>
</hibernate-mapping>